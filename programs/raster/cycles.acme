; @FIXME Broken
;
; Raster interrupt handler cycle experiment

            ;ACME 0.97
            !cpu 6510
            !src <lib/raster/m-raster.acme>
            * = $c000

            !addr SCREEN = $0400
            !addr TEXT_1 = SCREEN
            !addr TEXT_2 = SCREEN + 7*40
            RASTER_LINE_1  = 30
            RASTER_LINE_2  = 60

            ; Increase the value of this constant until the
            ; IRQ handler can no longer keep up -
            ; the screen border will start flickering.
            NB_OF_CHARS = 3


!macro set_border_color @color {
            lda #@color
            sta $d020
}


main:
            jsr init
            jmp busy_loop


; Perform a busy loop outside the raster interrupt handlers.
;
; This allows for more than 63 cycles.
; Caveat: possible race condition on counter.
busy_loop:
            inc SCREEN
            lda counter
            beq +
            inc $d020
            dec counter
+           jmp busy_loop


init:
            sei

            lda #%01111111
            sta $dc0d

            and $d011
            sta $d011

            +set_raster_irq RASTER_LINE_1, irq_handler_1

            lda #%00000001
            sta $d01a

            cli

            rts


irq_handler_1:
            +set_border_color 1
            +set_raster_irq RASTER_LINE_2, irq_handler_2

            lda #0
            tax
-           sta TEXT_1,x
            inx
            cpx #NB_OF_CHARS
            bne -

            +set_border_color 2
            +ack_short_kernal


irq_handler_2:
            +set_border_color 3
            +set_raster_irq RASTER_LINE_1, irq_handler_1

            lda #0
            tax
-           sta TEXT_2,x
            inx
            cpx #NB_OF_CHARS
            bne -

            lda 5
            sta counter

            +set_border_color 4
            +ack_short_kernal


counter:
            !byte 5
