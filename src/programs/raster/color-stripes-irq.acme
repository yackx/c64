; Multiple stripes raster interrupt demo
;
; Built from and extended:
; http://www.c64-wiki.com/index.php/Raster_interrupt

            ;ACME 0.97
            !cpu 6510

            !src <lib/registers/pseudo-registers.acme>

            * = $c000


init:
            sei                             ; turn off interrupts -
                                            ; otherwise incoming IRQ could occur as we
                                            ; are modifying the IRQ vector

            lda #%01111111
            sta $dc0d                       ; switch off interrupt signals from CIA-1

            lda #%00011011
            sta $d011                       ; #7 = raster line bit #8

            lda #0
            sta $d012                       ; set raster line where interrupt shall occur

            lda #<.irq_handler              ; set raster interrupt vector
            sta $0314
            lda #>.irq_handler
            sta $0315

            lda #%00000001                  ; enable raster interrupts
            sta $d01a

            cli                             ; clear interrupt flag -
                                            ; allow CPU to respond to interrupts
            rts


; Interrupt handler
;
; Display stripes on the screen border,
; changing color every few raster lines.
;
; $d012 = raster line bits #0-#7
; $d011 = bit #7 = raster line bit #8
;
; Read  d011-d012 to get the current raster line
; Write d011-d012 to set the next interrupt line
;
; 318 raster lines:
; Upper part of the screen (HI) 256 lines -> $d011 #7 = 1
; Lower part of the screen (LO)  62 lines -> $d011 #7 = 0

.irq_handler:
            ldx $d012                       ; raster line bits #0-#7
            lda $d011                       ; raster line bit #8 (in #7)
            rol                             ; test raster line bit #8
            bcc .next_line                  ; C=1 -> currently LO screen
                                            ; C=0 -> currently HI screen

.current_lo:                                ; raster line #8 is set (LO)
            cpx #30                         ; max raster line reached bottom screen?
            bpl .switch_hi_lo               ; yes -> switch to HI
                                            ; no -> next line

.next_line:                                 ; raster line #8 is clear (HI)
            txa
            clc
            adc #8                          ; add a few lines
            sta $d012                       ; next raster line
            bcc .done                       ; C=1 -> max HI line, switch to LO
                                            ; C=0 -> done for this irq

.switch_hi_lo:
            lda $d011
            eor #%10000000
            sta $d011
            lda #0
            sta $d012                       ; reset raster line

.done:
            inc $d020                       ; change border color
            asl $d019
            jmp $ea81                       ; jump into KERNAL shorter ROM routine
                                            ; to only restore registers from stack etc

