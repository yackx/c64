
; Move the C64 balloon sprite accros x-axis in sine
;
; Make use of !for pseudo-code to create a sine table
; with ACME trigonometry and math functions.
;
; Known issue:
; - Long lingering time right of the screen
; - Top transition rough

            ;ACME 0.97
            !cpu 6510

            !src <lib/mmap/mmap.acme>
            !src <lib/screen/color.acme>
            !src <lib/misc/math.acme>
            !src <lib/mem/m_mem.acme>

            !src <lib/misc/upstart.acme>

            DELAY = 64*4
            SPRITE_AREA = $0340
            SPRITE_BLOCK = SPRITE_AREA / 64


main:
            jsr CINT                        ; clear screen

            +copy_bytes_8 sprite_data, SPRITE_AREA, 63

            lda #%00000001
            sta SPENA                       ; activate sprite #0

            lda #COLOR_WHITE
            sta SP0COLOR                    ; sprite #0 color

            lda #SPRITE_BLOCK
            sta DEFAULT_SPRITE_PTR_AREA     ; sprite #0 at 13*64=832=$0340

            lda >DELAY
            sta R5
            lda <DELAY
            sta R6


; Move x and y
; Notice how we STX before BNE.
; This avoids a glitch when transitioning left/right.
move:
            lda #40
            and SP0X
            ldx #40
-           lda y_pos,x
            sta SP0Y                        ; set y position
            inx                             ; next y position
            inc SP0X                        ; move sprite 1 pixel right
            bne +

            ; Transition left/right of the screen
            lda MSIGX                       ; read sprites x pos MSB register
            eor #%00000001                  ; flip sprite x pos MSB
            sta MSIGX

+           jsr busy_wait
            jmp -


            !src <lib/misc/busy_wait.acme>

sprite_data:
            !bin <programs/sprites/balloon.bin>

            !align $ff, 0, 0
y_pos:
            !for x, 0, 255 {
            !byte sin(float(x) / 255 * PI) * 128 + 100 + 0.5
            }
